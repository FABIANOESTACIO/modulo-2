// Importa componentes da biblioteca React Native para estrutura visual e interação
import {
    SafeAreaView,         // Garante que o conteúdo respeite áreas seguras (ex: notch)
    ScrollView,           // Permite rolagem vertical do conteúdo
    Text,                 // Componente de texto
    Pressable,            // Componente de botão sensível ao toque
    ActivityIndicator,    // Indicador de carregamento (spinner)
    Modal,                // Componente de modal (janela flutuante)
    View,                 // Container genérico para layout
    StyleSheet,           // Utilitário para definir estilos CSS
} from 'react-native';
import { router } from 'expo-router';
// Importa o hook useState para controle de estado do componente
import { useState } from 'react';

// Importa o conteúdo reutilizável da modal (lista e texto)
import DetalhesContent from '@/components/ui/DetalhesContent';

export default function Modulo2() {
    // Estado responsável por exibir ou esconder o modal
    const [modalVisible, setModalVisible] = useState(false);

    return (
        // Garante que o conteúdo da tela respeite as áreas seguras do dispositivo (notch, barra de status etc.)
        <SafeAreaView style={styles.container}>
            {/* Permite rolagem vertical caso o conteúdo ultrapasse a altura da tela */}
            <ScrollView contentContainerStyle={styles.content}>
                {/* Título principal da tela */}
                <Text style={styles.title}>Bem-vindo ao App do Módulo 2!</Text>

                {/* Botão que ativa a exibição do modal */}
                <Pressable onPress={() => setModalVisible(true)} style={styles.button}>
                    <Text style={styles.buttonText}>Abrir Detalhes no Modal</Text>
                </Pressable>

                {/* Botão que leva de volta para a Home */}
                <Pressable onPress={() => router.push('/')} style={styles.button}>
                    <Text style={{ color: 'white', fontWeight: 'bold' }}>Ir para Home</Text>
                </Pressable>
                   {/* Modal exibido sobre o conteúdo principal */}
                <Modal visible={modalVisible} transparent animationType="slide">
                    {/* Fundo escurecido atrás da modal */}
                    <View style={styles.modalOverlay}>
                        {/* Área principal da modal */}
                        <View style={styles.modalContent}>

                            {/* Conteúdo detalhado da modal (lista, mensagem, etc.) */}
                            <DetalhesContent />

                            {/* Seção de botões de ação */}
                            <View style={styles.actions}>
                                {/* Botão que fecha o modal */}
                                <Pressable style={styles.close} onPress={() => setModalVisible(false)}>
                                    <Text style={{ color: 'white' }}>Fechar</Text>
                                </Pressable>
                                 {/* Botão de confirmação */}
                                <Pressable style={styles.confirm} onPress={() => alert('Confirmado!')}>
                                    <Text style={{ color: 'white' }}>Confirmar</Text>
                                </Pressable>
                            </View>
                        </View>
                    </View>
                </Modal>

                {/* Indicador de carregamento visual (rodando continuamente) */}
                <ActivityIndicator size="large" color="green" style={{ marginTop: 20 }} />
            </ScrollView>
        </SafeAreaView>
    );
}

const styles = StyleSheet.create({
    // Estilo base da tela, ocupa 100% da altura do dispositivo
    container: {
        flex: 1,
    },

    // Estilo do conteúdo dentro do ScrollView (aplica padding nas bordas internas)
    content: {
        padding: 20,
    },
      // Estilo do título principal da tela
    title: {
        fontSize: 24,           // Tamanho da fonte grande
        marginBottom: 20,       // Espaço abaixo do título
    },

    // Estilo do botão "Abrir Modal"
    button: {
        marginBottom: 20,       // Espaço abaixo do botão
        padding: 10,            // Espaçamento interno
        backgroundColor: '#0a5ca8', // Cor azul escura para o fundo do botão
        borderRadius: 6,        // Bordas arredondadas
        alignItems: 'center',   // Centraliza o texto horizontalmente dentro do botão
    },

       // Estilo do texto dentro do botão
    buttonText: {
        color: 'white',         // Cor branca para o texto
        fontWeight: 'bold',     // Texto em negrito
    },

    // Estilo do fundo escurecido por trás do modal
    modalOverlay: {
        flex: 1,                        // Ocupa toda a tela
        justifyContent: 'center',      // Centraliza verticalmente o conteúdo do modal
        alignItems: 'center',          // Centraliza horizontalmente
        backgroundColor: '#00000099',  // Fundo preto com opacidade (transparência)
    },
      // Estilo da caixa branca que aparece como conteúdo do modal
    modalContent: {
        backgroundColor: 'white',      // Fundo branco
        padding: 20,                   // Espaçamento interno
        borderRadius: 10,              // Bordas arredondadas
        width: '85%',                  // Ocupa 85% da largura da tela
    },
// Estilo do container que envolve os dois botões (Confirmar e Fechar)
    actions: {
        flexDirection: 'row',          // Organiza os botões na horizontal
        justifyContent: 'space-around',// Deixa espaço igual entre os botões
        marginTop: 10,                 // Espaço acima dos botões
    },
      // Estilo do botão de confirmar
    confirm: {
        backgroundColor: 'green',      // Fundo verde
        padding: 10,                   // Espaçamento interno
        borderRadius: 5,               // Bordas arredondadas
    },

    // Estilo do botão de fechar
    close: {
        backgroundColor: 'red',        // Fundo vermelho
        padding: 10,                   // Espaçamento interno
        borderRadius: 5,               // Bordas arredondadas
    },
});
// Estamos importando o objeto 'router' da biblioteca 'expo-router'.
// O 'router' é responsável por permitir a navegação programática entre telas do app.
// Com ele, podemos redirecionar o usuário para outras rotas/páginas através de comandos no código, 
// como por exemplo: router.push('/outra-pagina');

// Importa componente de imagem otimizado da biblioteca Expo
import { Image } from 'expo-image';

// Importa componentes básicos do React Native para estrutura visual e interação
import { StyleSheet, Pressable, Text, ScrollView, View } from 'react-native';

// Importa o roteador para navegação entre telas
import { router } from 'expo-router';

// Importa ThemedText para exibir textos que respeitam o tema atual do app (claro/escuro)
// Ideal para usar em títulos ou textos importantes que devem seguir o estilo global
import { ThemedText } from '@/components/ThemedText';
// Componente principal da tela inicial (HomeScreen)
export default function HomeScreen() {
    return (
        // ScrollView com rolagem vertical e layout flexível
        <ScrollView contentContainerStyle={styles.container}>

            {/* Banner ou imagem no topo da tela */}
            <Image
                source={require('@/assets/images/partial-react-logo.png')}
                style={styles.banner}
            />
                   {/* Título principal da tela (usando ThemedText para respeitar o tema) */}
            <ThemedText type="title" style={styles.title}>Main Menu</ThemedText>

            {/* Botão para navegar para a tela "Modulo2" */}
            <Pressable onPress={() => router.push('/modulo2')} style={styles.button}>
                <Text style={styles.buttonText}>Go to Module 2</Text>
            </Pressable>

            {/* Botão para navegar para a tela "Explore" */}
            <Pressable onPress={() => router.push('/explore')} style={styles.button}>
                <Text style={styles.buttonText}>Explore</Text>
            </Pressable>

            {/* Rodapé com informações de versão */}
            <View style={styles.footer}>
                <Text style={styles.footerText}>Version 1.0.0</Text>
            </View>
        </ScrollView>
    );
}

// Definições de estilos da tela
const styles = StyleSheet.create({
    // Container principal da tela
    container: {
        flexGrow: 1,                // Faz com que o conteúdo do ScrollView ocupe toda a altura disponível
        justifyContent: 'center',   // Centraliza verticalmente o conteúdo
        alignItems: 'center',       // Centraliza horizontalmente o conteúdo
        padding: 20,                // Espaçamento interno (padding)
        backgroundColor: '#f9f9f9', // Cor de fundo cinza claro
    },
     // Estilo da imagem do banner
    banner: {
        width: 200,                 // Largura fixa da imagem (200 pixels)
        height: 150,                // Altura fixa da imagem (150 pixels)
        resizeMode: 'contain',      // Garante que a imagem seja redimensionada para caber sem corte
        marginBottom: 20,           // Espaço abaixo da imagem
    },

    // Estilo do título principal (utilizado com ThemedText)
    title: {
        fontSize: 28,               // Tamanho de fonte grande
        marginBottom: 20,           // Espaço abaixo do título
        fontWeight: 'bold',         // Texto em negrito
        textAlign: 'center',        // Centraliza o texto horizontalmente
    },
  // Estilo dos botões de navegação
    button: {
        backgroundColor: '#0a5ca8', // Cor de fundo azul
        paddingVertical: 12,        // Espaçamento vertical (acima e abaixo)
        paddingHorizontal: 20,      // Espaçamento horizontal (esquerda e direita)
        borderRadius: 8,            // Bordas arredondadas
        alignItems: 'center',       // Centraliza o texto dentro do botão
        marginBottom: 16,           // Espaço abaixo de cada botão
        width: '80%',               // Largura do botão: 80% da largura da tela/container
    },
      // Estilo do texto dentro dos botões
    buttonText: {
        color: 'white',             // Cor do texto: branco
        fontWeight: 'bold',         // Texto em negrito
        fontSize: 16,               // Tamanho médio-grande da fonte
    },

    // Estilo do container do rodapé
    footer: {
        marginTop: 40,              // Espaço acima do rodapé
    },

    // Estilo do texto do rodapé
    footerText: {
        color: '#777',              // Cor do texto: cinza médio
        fontSize: 14,               // Tamanho pequeno da fonte
    },
});
